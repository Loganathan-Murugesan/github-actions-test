# This is a reusable workflow
name: GIT REPO TAGGING

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      github_org:
        description: 'github organization for the repo'
        required: true
        type: choice
        options:
        - infosight
        - loganathan-murugesan
      repo_name:
        description: 'repository name'
        required: true
        type: string
      repo_branch:
        description: 'git reposiotry branch name'
        default: "main"
        required: false
        type: string
      tag:
        description: 'provide the tag value'
        required: true
        type: string
      tag_message:
        description: 'add any custom message if neccessary else leave empty.'
        required: false
        type: string
    secrets:
      GLCP_GH_TOKEN:
        required: true

env:
  GITHUB_HPE_URL: https://github.hpe.com/
  GITHUB_URL: https://github.com/
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "git-repo-tagging"
  git-repo-tagging:
    # The type of runner that the job will run on
    # runs-on: [  self-hosted, Linux, glcp-lvs-infosight ]
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Git Checkout
        run: |
          git clone -b ${{ github.event.inputs.repo_branch }} https://"${{ secrets.GLCP_GH_TOKEN }}"@github.com/glcp/"${{ github.event.inputs.repo_name }}".git
          cd "${{ github.event.inputs.repo_name }}"
          git branch
      
      - name: create tag
        run: |
          git tag
          git log --merges -n 1 > TagMessages.txt
          if [ ! -z "${{ github.event.inputs.tag_message }}" ]
            echo "${{ github.event.inputs.tag_message }}" >> TagMessages.txt
          git config --global user.email 'sfrm-jenkins@hpe.com'
          git config --global user.name 'sfrm-jenkins'
          git tag -a "${{ github.event.inputs.tag }}" -F TagMessages.txt
          git push origin tag "${{ github.event.inputs.tag }}"
          echo "Repository has been tagged with ${{ github.event.inputs.tag }}"